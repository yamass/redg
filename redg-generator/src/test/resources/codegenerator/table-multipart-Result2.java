/*
 * This file was generated by RedG.
 * https://yamass.github.io/redg
 *       ____           ________
 *      / __ \___  ____/ / ____/
 *     / /_/ / _ \/ __  / / __
 *    / _, _/  __/ /_/ / /_/ /
 *   /_/ |_|\___/\__,_/\____/
 *
 * DO NOT EDIT MANUALLY!
 * Re-run the code generation to reflect database changes.
 */
package de.yamass.redg.generated;

import java.util.ArrayList;
import java.util.List;

import de.yamass.redg.runtime.*;
import de.yamass.redg.models.*;

/**
 * <table summary="The table model attributes and their values">
 *     <tr>
 *         <td><strong>Attribute</strong></td>
 *         <td><strong>Value</strong></td>
 *     </tr>
 *     <tr>
 *         <td>Table name</td>
 *         <td>DEMO_COMPANY</td>
 *     </tr>
 *     <tr>
 *         <td>Full table name</td>
 *         <td>"RT-CG-MPFK".PUBLIC.DEMO_COMPANY</td>
 *     </tr>
 * </table>
 */
public class GDemoCompany implements RedGEntity {

    protected AbstractRedG redG;

    // do not manually make this public and instantiate it directly. Use the RedG Main class
    GDemoCompany(AbstractRedG redG) {
        this.redG = redG;
        try {
            this.countryCode = redG.getDefaultValueStrategy().getDefaultValue(getTableModel().getColumnBySQLName("COUNTRY_CODE"), java.lang.String.class);
            this.name = redG.getDefaultValueStrategy().getDefaultValue(getTableModel().getColumnBySQLName("NAME"), java.lang.String.class);

        } catch (Exception e) {
            throw new RuntimeException("Could not get default value", e);
        }
    }

    GDemoCompany(boolean generateDefaultValues, AbstractRedG redG) {
        // First parameter exists simply because this constructor needs a different signature from the constructor above if the tables have no NOT NULL FK
        // Only for ExistingGDemoCompany and usage with Supplier-Functions , otherwise NOT NULL constraints cannot be checked and no default values are generated.
        this.redG = redG;
        if (generateDefaultValues) {
            try {
                this.countryCode = redG.getDefaultValueStrategy().getDefaultValue(getTableModel().getColumnBySQLName("COUNTRY_CODE"), java.lang.String.class);
                this.name = redG.getDefaultValueStrategy().getDefaultValue(getTableModel().getColumnBySQLName("NAME"), java.lang.String.class);

            } catch (Exception e) {
                throw new RuntimeException("Could not get default value", e);
            }
        }
    }

    private java.lang.String countryCode;

    /**
     * <table summary="The column model attributes and their values">
     *     <tr>
     *         <td><strong>Attribute</strong></td>
     *         <td><strong>Value</strong></td>
     *     </tr>
     *     <tr>
     *         <td>Table name</td>
     *         <td>DEMO_COMPANY</td>
     *     </tr>
     *     <tr>
     *         <td>Full table name</td>
     *         <td>"RT-CG-MPFK".PUBLIC.DEMO_COMPANY</td>
     *     </tr>
     *     <tr>
     *         <td>Column name</td>
     *         <td>COUNTRY_CODE</td>
     *     </tr>
     *     <tr>
     *         <td>SQL type</td>
     *         <td>CHARACTER VARYING</td>
     *     </tr>
     *     <tr>
     *         <td>Not nullable?</td>
     *         <td>true</td>
     *     </tr>
     *     <tr>
     *         <td>Part of Primary key?</td>
     *         <td>true</td>
     *     </tr>
     *     <tr>
     *         <td>Unique?</td>
     *         <td>true</td>
     *     </tr>
     * </table>
     */
    public GDemoCompany countryCode(java.lang.String value) {
        if (value == null) {
            throw new IllegalArgumentException("Setting countryCode to null violates a NOT NULL constraint!");
        }
        this.countryCode = value;
        return this;
    }

    /**
     * <table summary="The column model attributes and their values">
     *     <tr>
     *         <td><strong>Attribute</strong></td>
     *         <td><strong>Value</strong></td>
     *     </tr>
     *     <tr>
     *         <td>Table name</td>
     *         <td>DEMO_COMPANY</td>
     *     </tr>
     *     <tr>
     *         <td>Full table name</td>
     *         <td>"RT-CG-MPFK".PUBLIC.DEMO_COMPANY</td>
     *     </tr>
     *     <tr>
     *         <td>Column name</td>
     *         <td>COUNTRY_CODE</td>
     *     </tr>
     *     <tr>
     *         <td>SQL type</td>
     *         <td>CHARACTER VARYING</td>
     *     </tr>
     *     <tr>
     *         <td>Not nullable?</td>
     *         <td>true</td>
     *     </tr>
     *     <tr>
     *         <td>Part of Primary key?</td>
     *         <td>true</td>
     *     </tr>
     *     <tr>
     *         <td>Unique?</td>
     *         <td>true</td>
     *     </tr>
     * </table>
     */
    public java.lang.String countryCode() {
        return this.countryCode;
    }

    private java.lang.String name;

    /**
     * <table summary="The column model attributes and their values">
     *     <tr>
     *         <td><strong>Attribute</strong></td>
     *         <td><strong>Value</strong></td>
     *     </tr>
     *     <tr>
     *         <td>Table name</td>
     *         <td>DEMO_COMPANY</td>
     *     </tr>
     *     <tr>
     *         <td>Full table name</td>
     *         <td>"RT-CG-MPFK".PUBLIC.DEMO_COMPANY</td>
     *     </tr>
     *     <tr>
     *         <td>Column name</td>
     *         <td>NAME</td>
     *     </tr>
     *     <tr>
     *         <td>SQL type</td>
     *         <td>CHARACTER VARYING</td>
     *     </tr>
     *     <tr>
     *         <td>Not nullable?</td>
     *         <td>true</td>
     *     </tr>
     *     <tr>
     *         <td>Part of Primary key?</td>
     *         <td>true</td>
     *     </tr>
     *     <tr>
     *         <td>Unique?</td>
     *         <td>true</td>
     *     </tr>
     * </table>
     */
    public GDemoCompany name(java.lang.String value) {
        if (value == null) {
            throw new IllegalArgumentException("Setting name to null violates a NOT NULL constraint!");
        }
        this.name = value;
        return this;
    }

    /**
     * <table summary="The column model attributes and their values">
     *     <tr>
     *         <td><strong>Attribute</strong></td>
     *         <td><strong>Value</strong></td>
     *     </tr>
     *     <tr>
     *         <td>Table name</td>
     *         <td>DEMO_COMPANY</td>
     *     </tr>
     *     <tr>
     *         <td>Full table name</td>
     *         <td>"RT-CG-MPFK".PUBLIC.DEMO_COMPANY</td>
     *     </tr>
     *     <tr>
     *         <td>Column name</td>
     *         <td>NAME</td>
     *     </tr>
     *     <tr>
     *         <td>SQL type</td>
     *         <td>CHARACTER VARYING</td>
     *     </tr>
     *     <tr>
     *         <td>Not nullable?</td>
     *         <td>true</td>
     *     </tr>
     *     <tr>
     *         <td>Part of Primary key?</td>
     *         <td>true</td>
     *     </tr>
     *     <tr>
     *         <td>Unique?</td>
     *         <td>true</td>
     *     </tr>
     * </table>
     */
    public java.lang.String name() {
        return this.name;
    }


    public List<RedGEntity> getDependencies() {
        List<RedGEntity> dependencies = new ArrayList<>();
        return dependencies;
    }

    public List<GDemoUser> demoUsersForCompany() {
        return this.redG.findEntities(GDemoUser.class, gEntity -> ((GDemoUser) gEntity).company() == this);
    }

    public GDemoCompany addDemoUsersForCompany(GDemoUser... objects) {
        for (GDemoUser obj : objects) {
            obj.company(this);
        }
        return this;
    }


    public String getSQLString() {
        return String.format("INSERT INTO \"DEMO_COMPANY\" (" +
                        "" +
                        "" +
                        "\"COUNTRY_CODE\", \"NAME\"" +
                        ") VALUES (" +
                        "" +
                        "" +
                        "%s, %s)",
                this.redG.getSqlValuesFormatter().formatValue(this.countryCode(),
                        "CHARACTER VARYING", "\"RT-CG-MPFK\".PUBLIC.DEMO_COMPANY",
                        "DEMO_COMPANY", "COUNTRY_CODE"),
                this.redG.getSqlValuesFormatter().formatValue(this.name(),
                        "CHARACTER VARYING", "\"RT-CG-MPFK\".PUBLIC.DEMO_COMPANY",
                        "DEMO_COMPANY", "NAME")
        );
    }

    public String getPreparedStatementString() {
        return "INSERT INTO \"DEMO_COMPANY\" (" +
                "" +
                "" +
                "\"COUNTRY_CODE\", \"NAME\"" +
                ") VALUES (" +
                "" +
                "" +
                "?, ?)";
    }

    public Object[] getPreparedStatementValues() {
        return new Object[]{
                this.countryCode(),
                this.name()
        };
    }

    public AttributeMetaInfo[] getPreparedStatementValuesMetaInfos() {
        return new AttributeMetaInfo[]{
                new AttributeMetaInfo("COUNTRY_CODE", "DEMO_COMPANY", "\"RT-CG-MPFK\".PUBLIC.DEMO_COMPANY", "CHARACTER VARYING", 12, java.lang.String.class, true),
                new AttributeMetaInfo("NAME", "DEMO_COMPANY", "\"RT-CG-MPFK\".PUBLIC.DEMO_COMPANY", "CHARACTER VARYING", 12, java.lang.String.class, true)
        };
    }

    private static String serializedTableModel = "rO0ABXNyACBkZS55YW1hc3MucmVkZy5tb2RlbHMuVGFibGVNb2RlbL+0Cs2MvQwOAgAKWgAYaGFzQ29sdW1uc0FuZEZvcmVpZ25LZXlzTAAJY2xhc3NOYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAAHY29sdW1uc3QAEExqYXZhL3V0aWwvTGlzdDtMAAtmb3JlaWduS2V5c3EAfgACTAATaW5jb21pbmdGb3JlaWduS2V5c3EAfgACTAAXam9pblRhYmxlU2ltcGxpZmllckRhdGF0AA9MamF2YS91dGlsL01hcDtMAARuYW1lcQB+AAFMAAtwYWNrYWdlTmFtZXEAfgABTAALc3FsRnVsbE5hbWVxAH4AAUwAB3NxbE5hbWVxAH4AAXhwAHQADEdEZW1vQ29tcGFueXNyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleHAAAAACdwQAAAACc3IAIWRlLnlhbWFzcy5yZWRnLm1vZGVscy5Db2x1bW5Nb2RlbIDpepgPjS7uAgANWgARZXhwbGljaXRBdHRyaWJ1dGVaAAdub3ROdWxsWgAQcGFydE9mRm9yZWlnbktleVoAEHBhcnRPZlByaW1hcnlLZXlJAApzcWxUeXBlSW50WgAGdW5pcXVlTAASY29udmVuaWVuY2VTZXR0ZXJzcQB+AAJMAA9kYkZ1bGxUYWJsZU5hbWVxAH4AAUwABmRiTmFtZXEAfgABTAALZGJUYWJsZU5hbWVxAH4AAUwADGphdmFUeXBlTmFtZXEAfgABTAAEbmFtZXEAfgABTAAHc3FsVHlwZXEAfgABeHAAAQABAAAADAFzcgAfamF2YS51dGlsLkNvbGxlY3Rpb25zJEVtcHR5TGlzdHq4F7Q8p57eAgAAeHB0ACAiUlQtQ0ctTVBGSyIuUFVCTElDLkRFTU9fQ09NUEFOWXQADENPVU5UUllfQ09ERXQADERFTU9fQ09NUEFOWXQAEGphdmEubGFuZy5TdHJpbmd0AAtjb3VudHJ5Q29kZXQAEUNIQVJBQ1RFUiBWQVJZSU5Hc3EAfgAIAAEAAQAAAAwBcQB+AAtxAH4ADHQABE5BTUVxAH4ADnEAfgAPdAAEbmFtZXEAfgAReHNxAH4ABgAAAAB3BAAAAAB4c3EAfgAGAAAAAXcEAAAAAXNyAC1kZS55YW1hc3MucmVkZy5tb2RlbHMuSW5jb21pbmdGb3JlaWduS2V5TW9kZWzw0SQJLk0H/QIABVoAB25vdE51bGxMAA1hdHRyaWJ1dGVOYW1lcQB+AAFMABhyZWZlcmVuY2luZ0F0dHJpYnV0ZU5hbWVxAH4AAUwAFXJlZmVyZW5jaW5nRW50aXR5TmFtZXEAfgABTAAXcmVmZXJlbmNpbmdKYXZhVHlwZU5hbWVxAH4AAXhwAHQAE2RlbW9Vc2Vyc0ZvckNvbXBhbnl0AAdjb21wYW55dAAIRGVtb1VzZXJ0AAlHRGVtb1VzZXJ4c3IAEWphdmEudXRpbC5IYXNoTWFwBQfawcMWYNEDAAJGAApsb2FkRmFjdG9ySQAJdGhyZXNob2xkeHA/QAAAAAAAAHcIAAAAEAAAAAB4dAALRGVtb0NvbXBhbnl0ABhkZS55YW1hc3MucmVkZy5nZW5lcmF0ZWRxAH4ADHEAfgAO";
    private static TableModel tableModel;

    public static String getSerializedTableModel() {
        return serializedTableModel;
    }

    public static TableModel getTableModel() {
        if (tableModel == null) {
            byte[] data = java.util.Base64.getDecoder().decode(serializedTableModel);
            try {
                java.io.ObjectInputStream ois = new java.io.ObjectInputStream(new java.io.ByteArrayInputStream(data));
                tableModel = (TableModel) ois.readObject();
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        }
        return tableModel;
    }
}